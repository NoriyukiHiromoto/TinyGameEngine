#pragma once

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
#include "Artemis.Local.hpp"

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
namespace Artemis
{
namespace Threading
{

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
class Thread
{
private:
	std::thread _Thread;
	std::function<void(void*)> _Callback;
	void* _pParameter;

public:
	Thread();
	Thread(std::function<void(void*)> Callback, void* pParameter);

	void Create(std::function<void(void*)> Callback, void* pParameter);
	void Wait();

public:
	static void Sleep(uint32_t MilliSecoond);
};

//----------------------------------------------------------------------------------
//
//----------------------------------------------------------------------------------
}
}
